summary(dat$Turnover_Range_EURO)
dat$Plant<-as.factor(dat$Plant)
summary(dat$Plant)
mlr<-lm(Cost_of_Goods_Sold_EURO~Plant
+Turnover_Range_EURO+Geographical_Area+
+Customer_Class+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Plant+Turnover_Range_EURO+
+Turnover_Range_EURO+Geographical_Area+
+Customer_Class+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_Range_EURO+
+Turnover_Range_EURO+Geographical_Area+
+Customer_Class+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Plant
+Turnover_Range_EURO+
+Customer_Class+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Plant
+Turnover_Range_EURO+Geographical_Area+
Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_Range_EURO+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_Range_EURO,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO+Geographical_Area,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO+Geographical_Area
+Customer_Class,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO+Geographical_Area
+Customer_Class+Turnover_Range_EURO,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Turnover_EURO+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_margin+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_Margin+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
summary(mlr)
dat$Geographical_Area<-as.factor(dat$Geographical_Area)
dat$Geographical_Area<-as.factor(dat$Geographical_Area)
#=============================================================================
# Now we know that these are the best cost drivers ! but we cannot determine a new customer
# by how much he will cost
# We know a knew customer by his geographical area
dat$Geographical_Area<-as.factor(dat$Geographical_Area)
summary(dat$Geographical_Area)
# We know a knew customer by class and by Turnoverrange
dat$Customer_Class<-as.factor(dat$Customer_Class)
summary(dat$Customer_Class)
dat$Turnover_Range_EURO<-as.factor(dat$Turnover_Range_EURO)
summary(dat$Turnover_Range_EURO)
# and the plant that will be closest to him (Assuming)
dat$Plant<-as.factor(dat$Plant)
summary(dat$Plant)
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_Margin+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
summary(mlr)
save(mlr, file = "FinalPredModel.rda")
rm(mlr)
load("FinalPredModel.rda")
summary(mlr)
library(shiny); runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
dat$Geographical_Area<-as.factor(dat$Geographical_Area)
summary(dat$Geographical_Area)
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
dat$Customer_Class<-as.factor(dat$Customer_Class)
summary(dat$Customer_Class)
dat$Turnover_Range_EURO<-as.factor(dat$Turnover_Range_EURO)
summary(dat$Turnover_Range_EURO)
dat$Plant<-as.factor(dat$Plant)
summary(dat$Plant)
dat$Plant<-as.factor(dat$Product_Line)
summary(dat$Plant)
dat$Plant<-as.factor(dat$Product_Type)
summary(dat$Plant)
rm(list=ls())
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
source("Libraries.R")
dat<-read.csv("FinalPMSData.csv",header = T)
dat<-dat[,-1]
data$Plant[1]
data[1,1]
dat[1,1]
print(dat[1,1])
print(dat$Plant[1])
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
data$Plant[1]
dat$Plant[1]
a<-dat$Plant[1]
a
dat$Total_Cost_of_Distribution[1]
infoBox("Machine has thought rmse is : ",data$Total_Cost_of_Distribution[1], icon = icon("thumbs-up", lib = "glyphicon"),color = "red")
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
toString(dat$Total_Cost_of_Distribution[1])
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
dat$Total_Cost_of_Distribution[1]
str(dat$Total_Cost_of_Distribution[1])
String(dat$Total_Cost_of_Distribution[1])
string(dat$Total_Cost_of_Distribution[1])
tostring(dat$Total_Cost_of_Distribution[1])
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
a
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
paste("You have selected",a)
a<-toString(dat$Total_Cost_of_Distribution[1])
str1 <- paste("You have selected",a)
str1
HTML(paste(str1,sep = '<br/>'))
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
c("a",1)
predict(mlr,c(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
predict(mlr,dat)
predict(mlr,as.matrix(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
library(caret)
predict(mlr,as.matrix(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
predict(mlr)
predict(mlr,dat[1])
pred<-predict(mlr,as.matrix(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
#Author @ Mohammed 26/01/2017
#Code used to Fetch/install/Load all libraries required
print("============== Beginning to load libraries  ===================")
setwd("D:/RPROJECTS/PMS_FINAL_Project")
#Function To check if
checkInstallLoad <- function(libName)
{
if(!require(libName, character.only=TRUE))
{
install.packages(libName)
require(libName, character.only=TRUE)
}
}
#Calling the libraries for Decision tree
checkInstallLoad("RWeka")
checkInstallLoad("partykit")
#calling the libraries for Logistic Regression
checkInstallLoad("car")
#calling the libraries for Naive Bayes
checkInstallLoad("e1071")
#calling the libraries for Random forest
checkInstallLoad("class")
checkInstallLoad("data.table")
checkInstallLoad("Matrix")
checkInstallLoad("YaleToolkit")
checkInstallLoad("Amelia")
checkInstallLoad("Metrics")
checkInstallLoad("plyr")
checkInstallLoad("dplyr")
checkInstallLoad("stringr")
checkInstallLoad("lubridate")
checkInstallLoad("ggplot2")
checkInstallLoad("plot3D")
checkInstallLoad("pROC")
checkInstallLoad("caret")
checkInstallLoad("caretEnsemble")
checkInstallLoad("e1071")
checkInstallLoad("randomForest")
checkInstallLoad("xgboost")
checkInstallLoad("rpart")
checkInstallLoad("C50")
checkInstallLoad("adabag")
checkInstallLoad("arules")
checkInstallLoad("ROCR")
checkInstallLoad("nnet")
checkInstallLoad("car")
checkInstallLoad("Ckmeans.1d.dp")
checkInstallLoad("psych")
#For Boruta
checkInstallLoad("Boruta")
#For Smote
checkInstallLoad("DMwR")
print("============== Completed loading libraries  ===================")
predict(mlr,c(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_Margin+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
summary(mlr)
predict(mlr,c(474,"FRA","Strategic","Strategic","IND","Northern Italy","Plugs and Caps","Spare Parts"))
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_Margin,data=dat)
summary(mlr)
predict(mlr,474)
predict(mlr,as.numeric(474))
predict(mlr, newdata = data.frame(7))
predict(mlr, newdata = data.frame(Gross_Margin=7))
mlr<-lm(Cost_of_Goods_Sold_EURO~Gross_Margin+Geographical_Area
+Customer_Class+Turnover_Range_EURO+Plant+Product_Line+Product_Type,dat=dat)
predict(mlr,newdata=data.frame(Gross_Margin=474,
Geographical_Area="FRA",Customer_Class="Strategic",
Turnover_Range_EURO="Strategic",Plant="Northern Italy",
Product_Line="Plugs and Caps",Product_Type="Spare Parts"))
predict(mlr,newdata=data.frame(Gross_Margin=474,
Geographical_Area="FRA",Customer_Class="Strategic",
Turnover_Range_EURO="Strategic",Plant="Northern Italy",
Product_Line="Plugs and Caps",Product_Type="Spare Parts"))
predict(mlr,newdata=data.frame(Gross_Margin=474,
Geographical_Area="FRA",Customer_Class="Strategic",Turnover_Range_EURO="Strategic",Plant="Northern Italy",Product_Line="Plugs and Caps",Product_Type="Spare Parts"))
a<-predict(mlr,newdata=data.frame(Gross_Margin=474,
Geographical_Area="FRA",Customer_Class="Strategic",Turnover_Range_EURO="Strategic",Plant="Northern Italy",Product_Line="Plugs and Caps",Product_Type="Spare Parts"))
a
a[1]
toString(a)
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
runApp('D:/MDS/PMS/PMS_Analysis/Shiny_Framework.R')
install.packages('rsconnect')
library(rsconnect)
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
rsconnect::setAccountInfo(name='mohammedtopiwalla', token='080A67059629510A9357C6F9B0825017', secret='HFpYDP758E2rLa+akLsJhZvDWw06ezV3oidUw4FK')
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
install.packages("digest")
install.packages("digest")
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
library(digest)
install.packages("digest")
install.packages("digest")
if(!require("devtools"))
install.packages("devtools")
devtools::install_github("rstudio/rsconnect")
rsconnect::setAccountInfo(name='mohammedtopiwalla', token='080A67059629510A9357C6F9B0825017', secret='HFpYDP758E2rLa+akLsJhZvDWw06ezV3oidUw4FK')
deployApp()
library(rsconnect)
deployApp()
rm(list=ls())
source("Libraries.R")
dat<-read.csv("FinalPMSData.csv",header = T)
dat<-dat[,-1]
NameList <- c("Material_Code","Plant","Customer_Code","Quantity_units","Turnover_EURO",
"Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Total_Customer_Order_Management_Costs","Customer_related_Issues_Costs",
"Total_Operations_Costs","Product_Line","Product_Type","Number_of_Deliveries",
"Average_Delivery_Batch_Size_units","Customer_Class","Turnover_Range_EURO",
"Geographical_Area","Gross_Margin","Total_Overheads","Operational_Profit")
ndat <- dat[,colnames(dat) %in% NameList]
plot(dat$Total_Cost_of_Distribution,ndat$Cost_of_Goods_Sold_EURO)
max(ndat$Cost_of_Goods_Sold_EURO)
max(ndat$Total_Cost_of_Distribution)
ndat[ndat$Total_Cost_of_Distribution==max(ndat$Total_Cost_of_Distribution),]
rm(list=ls())
source("Libraries.R")
dat<-read.csv("FinalPMSData.csv",header = T)
dat<-dat[,-1]
mlr<-lm(Cost_of_Goods_Sold_EURO~Plant,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Quantity_units,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class
+Geographical_Area,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class
+Geographical_Area+N_Parts,data=dat)
summary(mlr)
mlr<-glm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class
+Geographical_Area+N_Parts+dat$,data=dat)
summary(mlr)
mlr<-glm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class
+Geographical_Area+N_Parts,data=dat)
summary(mlr)
mlr<-lm(Cost_of_Goods_Sold_EURO~Product_Type+Product_Line+Customer_Class
+Geographical_Area+N_Parts,data=dat)
summary(mlr)
mlr<-lm(Offer_Development ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)
mlr2<-lm(Sales_Development~Offer_Development+Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr2)
mlr2<-lm(Sales_Development~Offer_Development+Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant+Geographical_Area,data=dat)
summary(mlr2)
dat$Plant+dat$Geographical_Area
dat$Plant+" "+dat$Geographical_Area
str(dat$Plant+" "+dat$Geographical_Area)
dat$Plant
dat2<-read.csv(file.choose(),header = T)
mlr2<-lm(Sales_Development~Offer_Development+Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant+Plant_Geo,data=dat2)
summary(mlr2)
mlr2<-lm(Sales_Transportation~Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant+Plant_Geo,data=dat2)
summary(mlr2)
mlr2$residuals
mlr2$effects
summary(mlr2)$r.squared
mlr<-lm(dat$Sales_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
mlr<-lm(Packing ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
summary(mlr)
mlr<-lm(dat$Distribution_Activities ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
rm(list=ls(0))
rm(list=ls())
source("Libraries.R")
setwd("D:/MDS/PMS/PMS_Analysis")
source("Libraries.R")
dat<-read.csv("FinalPMSData.csv",header = T)
dat<-dat[,-1]
mlr<-lm(dat$Sales_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
mlr<-lm(Packing ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Distribution_Activities ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
mlr<-lm(Trading_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line + Plant,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Custom_Duties_Trading ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared11
mlr<-lm(dat$Custom_Duties_Trading ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared11
summary(mlr)$r.squared
mlr<-lm(dat$Sales_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line +Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(Packing ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line +Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Distribution_Activities ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(Trading_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Distribution_Activities ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line +Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(Trading_Transportation ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line +Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Custom_Duties_Trading ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(Warehouse_Rent ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Distribution_Activities~dat$Sales_Transportation+dat$Packing+
dat$Distribution_Activities+dat$Trading_Transportation+
dat$Custom_Duties_Trading+dat$Warehouse_Rent+dat$Outbound_Logistics_Local_Branches
,data=dat)
mlr<-lm(Distribution_Activities~dat$Sales_Transportation+Packing+
Distribution_Activities+Trading_Transportation+
Custom_Duties_Trading+dat$Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
mlr<-lm(Distribution_Activities~Sales_Transportation+Packing+
Distribution_Activities+Trading_Transportation+
Custom_Duties_Trading+Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
dat$Distribution_Activities
View(head(dat))
mlr<-lm(Distribution_Activities~Sales_Transportation+Packing+
Trading_Transportation+
Custom_Duties_Trading+Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)$r.squared
mlr<-lm(Distribution_Activities~Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)$r.squared
mlr<-lm(Distribution_Activities~Distribution_Activities+Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
mlr<-lm(dat$Total_Cost_of_Distribution~Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Total_Cost_of_Distribution~Sales_Transportation+Packing+
Trading_Transportation+
Custom_Duties_Trading+Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Total_Cost_of_Distribution~Sales_Transportation+Packing+
Trading_Transportation+
Custom_Duties_Trading
,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Total_Cost_of_Distribution~Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes  + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~  N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units  +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)$r.squared
mlr<-lm(Warehouse_Rent ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)
mlr<-lm(dat$Total_Cost_of_Distribution~Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)
mlr<-lm(Warehouse_Rent ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)
mlr<-lm(dat$Outbound_Logistics_Local_Branches ~ Quantity_units + N_Parts +
Assembly_Labour_Minutes + Machinery_Minutes + Number_of_Deliveries +
Average_Delivery_Batch_Size_units + Turnover_Range_EURO +
Customer_Class + Product_Line+Product_Type + Plant+Geographical_Area,data=dat)
summary(mlr)
mlr<-lm(dat$Total_Cost_of_Distribution~Warehouse_Rent+Outbound_Logistics_Local_Branches
,data=dat)
summary(mlr)
