dat<-read.table(file.choose(),header = T,sep = ";")
View(head(dat))
sum(dat$Total.Cost.of.Distribution)
sum(dat$Quantity..units.)
sum(dat$Quantity..units.)
dat<-read.table(file.choose(),header = T,sep = ";")
View(head(dat))
sum(dat$Quantity..units.)
sum(dat$Turnover..EURO.)
summary(dat)
dat[is.na(dat)] <- 0
summary(dat)
dat$Plant<-as.factor(dat$Plant)
dat$Product.Line<-as.factor(dat$Product.Line)
dat$Product.Type<-as.factor(dat$Product.Type)
dat$Turnover.Range...000.EURO.<-as.factor(dat$Turnover.Range...000.EURO.)
dat$Geographical.Area<-as.factor(dat$Geographical.Area)
summary(dat)
write.csv("FinalPMSData.csv")
write.csv("FinalPMSData.csv")
write.csv(dat,"FinalPMSData.csv")
dat$Gross_Margin <- dat$Turnover..EURO.- dat$Cost.of.Goods.Sold..EURO.
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs + dat$Transportations + dat$Manage.Orders.to.Suppliers + dat$Inbound.Logistics + dat$Inspect.goods + dat$Manage.Foreign.Relationships
dat$Operational_Profit <- dat$Turnover..EURO. - dat$Cost.of.Goods.Sold..EURO. - dat$Total_Overheads
dat$ROS <- dat$Operational_Profit/dat$Turnover..EURO.
View(head(dat))
write.csv(dat,"FinalPMSData.csv")
colnames(dat)
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
write.csv(dat,"FinalPMSData.csv")
rm(list=ls())
source("Libraries.R")
dat<-read.table(file.choose(),header = T,sep = ";")
dat[is.na(dat)] <- 0
dat$Plant<-as.factor(dat$Plant)
dat$Product.Line<-as.factor(dat$Product.Line)
dat$Product.Type<-as.factor(dat$Product.Type)
dat$Turnover.Range...000.EURO.<-as.factor(dat$Turnover.Range...000.EURO.)
dat$Geographical.Area<-as.factor(dat$Geographical.Area)
dat$Gross_Margin <- dat$Turnover..EURO.- dat$Cost.of.Goods.Sold..EURO.
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
dat$Operational_Profit <- dat$Turnover..EURO. - dat$Cost.of.Goods.Sold..EURO. - dat$Total_Overheads
dat$ROS <- dat$Operational_Profit/dat$Turnover..EURO.
View(head(dat))
summary(dat)
write.csv(dat,"FinalPMSData.csv")
dat<-read.table(file.choose(),header = T,sep = ";")
View(head(dat))
summary(dat)
dat[is.na(dat)] <- 0
dat$Plant<-as.factor(dat$Plant)
dat$Product.Line<-as.factor(dat$Product.Line)
dat$Product.Type<-as.factor(dat$Product.Type)
dat$Turnover.Range...000.EURO.<-as.factor(dat$Turnover.Range...000.EURO.)
dat$Geographical.Area<-as.factor(dat$Geographical.Area)
dat$Gross_Margin <- dat$Turnover..EURO.- dat$Cost.of.Goods.Sold..EURO.
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
dat$Operational_Profit <- dat$Turnover..EURO. - dat$Cost.of.Goods.Sold..EURO. - dat$Total_Overheads
dat$ROS <- dat$Operational_Profit/dat$Turnover..EURO.
View(head(dat))
summary(dat)
write.csv(dat,"FinalPMSData.csv")
rm(list=ls())
dat<-read.table(file.choose(),header = T)
summary(dat)
dat<-read.table(file.choose(),header = T,sep = "?")
summary(dat)
dat<-read.table(file.choose(),header = T,sep = ".")
summary(dat)
dat<-read.table("C:\Users\moham\Desktop\PYTHON_STUFF\DataMining\OfficialClass\a.csv",header = T,sep = ",")
dat<-read.table("C:\\Users\\moham\\Desktop\\PYTHON_STUFF\\DataMining\\OfficialClass\\a.csv",header = T,sep = ",")
summary(dat)
dat<-read.table(file.choose(),header = T,sep = ",")
summary(dat)
dat<-read.table(file.choose(),header = T,sep = ",")
dat<-read.table(file.choose(),header = T,sep = "?")
summary(dat)
dat<-read.table(file.choose(),header = T,sep = ".")
summary(dat)
dat<-read.table(file.choose(),header = T,sep = ",")
summary(dat)
dat[dat != "?", ]
dat=dat[dat != "?", ]
summary(dat)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
dat<-read.csv(file.choose(),header=TRUE)
summarey(dat$ROS)
summary(dat$ROS)
19837/32790
25127/32379
source("Libraries.R")
dat<-read.table(file.choose(),header = T,sep = ";")
View(head(dat))
sum(dat$Quantity..units.)
sum(dat$Turnover..EURO.)
summary(dat)
dat[is.na(dat)] <- 0
dat$Plant<-as.factor(dat$Plant)
dat$Product.Line<-as.factor(dat$Product.Line)
dat$Product.Type<-as.factor(dat$Product.Type)
dat$Turnover.Range...000.EURO.<-as.factor(dat$Turnover.Range...000.EURO.)
dat$Geographical.Area<-as.factor(dat$Geographical.Area)
dat$Gross_Margin <- dat$Turnover..EURO.- dat$Cost.of.Goods.Sold..EURO.
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
dat$Operational_Profit <- dat$Turnover..EURO. - dat$Cost.of.Goods.Sold..EURO. - dat$Total_Overheads
names(dat)<-c("Material_Code","Plant","Customer_Code","Quantity_units","Turnover_EURO","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Sales_Transportation","Packing","Distribution_Activities","Trading_Transportation","Custom_Duties_Trading","Warehouse_Rent","Outbound_Logistics_Local_Branches","Total_Customer_Order_Management_Costs","Sales_Comissions","Sales_Development","Offer_Development","Order_Management","Customer_Service","Manage_Account_Receivables","Customer_Order_Management_Local_Branches","Customer_related_Issues_Costs","Rebate","Bad_Debt","Cost_of_Poor_Quality","Total_Operations_Costs","Manufacturing_Costs","Internal_Logistics_Costs","Supply_Chain_Management_Costs","Transportations","Manage_Orders_to_Suppliers","Inbound_Logistics","Inspect_goods","Manage_Foreign_Relationships","Product_Line","Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes","Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class","Turnover_Range_EURO","Geographical_Area","Gross_Margin","Total_Overheads","Operational_Profit")
View(head(dat))
summary(dat)
dat$Assembly_Labour_Minutes<-as.numeric(dat$Assembly_Labour_Minutes)
dat$Machinery_Minutes<-as.numeric(dat$Machinery_Minutes)
dat[is.na(dat)] <- 0
summary(dat)
write.csv(dat,"FinalPMSData.csv")
summary(dat)
write.csv(dat,"FinalPMSData.csv")
write.csv(dat,"FinalPMSData.csv")
dat$Turnover_EURO_Unit<-Turnover_EURO/Quantity_units
summary(dat)
dat$Turnover_EURO_Unit<-dat$Turnover_EURO/dat$Quantity_units
dat$Cost_of_Goods_Sold_EURO_Unit<-dat$Cost_of_Goods_Sold_EURO/dat$Quantity_units
dat$Total_Cost_of_Distribution_Unit<-dat$Total_Cost_of_Distribution/dat$Quantity_units
dat$Total_Customer_Order_Management_Costs_Unit<-dat$Total_Customer_Order_Management_Costs/dat$Quantity_units
dat$Customer_related_Issues_Costs_Unit<-dat$Customer_related_Issues_Costs/dat$Quantity_units
dat$Total_Operations_Costs_Unit<-dat$Total_Operations_Costs/dat$Quantity_units
dat$Gross_Margin_Unit<-dat$Gross_Margin/dat$Quantity_units
dat$Total_Overheads_Unit<-dat$Total_Overheads/dat$Quantity_units
dat$Operational_Profit_Unit<-dat$Operational_Profit/dat$Quantity_units
write.csv(dat,"FinalPMS_UnitINC_Data.csv")
NameList <- c("Material_Code","Plant","Customer_Code","Quantity_units","Turnover_EURO",
"Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution",
"Total_Customer_Order_Management_Costs","Customer_related_Issues_Costs",
"Total_Operations_Costs","Product_Line","Product_Type","N_Parts",
"Number_of_Deliveries","Customer_Class","Turnover_Range_EURO","Geographical_Area",
"Gross_Margin","Total_Overheads","Operational_Profit","Turnover_EURO_Unit",
"Cost_of_Goods_Sold_EURO_Unit","Total_Cost_of_Distribution_Unit",
"Total_Customer_Order_Management_Costs_Unit","Customer_related_Issues_Costs_Unit",
"Total_Operations_Costs_Unit","Gross_Margin_Unit","Total_Overheads_Unit",
"Operational_Profit_Unit")
idx <- match(NameList, names(dat))
idx <- sort(c(idx-1, idx))
train <- dat[,idx]
View(head(train))
set.seed(999)
boruta.train <- Boruta(Cost_of_Goods_Sold_EURO~., data = train, doTrace = 2)
print(boruta.train)
plot(boruta.train, xlab = "", xaxt = "n")
lz<-lapply(1:ncol(boruta.train$ImpHistory),function(i)
boruta.train$ImpHistory[is.finite(boruta.train$ImpHistory[,i]),i])
names(lz) <- colnames(boruta.train$ImpHistory)
Labels <- sort(sapply(lz,median))
axis(side = 1,las=2,labels = names(Labels),
at = 1:ncol(boruta.train$ImpHistory), cex.axis = 0.7)
View(head(train))
idx
unique(idx)
train <- dat[,unique(idx)]
write.csv(boruta.df,"BorutaResults_Unit.csv")
final.boruta <- TentativeRoughFix(boruta.train)
print(final.boruta)
boruta.df <- attStats(final.boruta)
print(boruta.df)
write.csv(boruta.df,"BorutaResults_Unit.csv")
rm(list=ls())
library(shiny); runApp('Shiny_Framework.R')
install.packages('plotly')
library(shinydashboard)
library(plotly)
runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
runApp('Shiny_Framework.R')
rm(list=ls())
source("Libraries.R")
dat<-read.table(file.choose(),header = T,sep = ";")
sum(dat$Quantity..units.)
sum(dat$Turnover..EURO.)
dat[is.na(dat)] <- 0
dat$Plant<-as.factor(dat$Plant)
dat$Product.Line<-as.factor(dat$Product.Line)
dat$Product.Type<-as.factor(dat$Product.Type)
dat$Turnover.Range...000.EURO.<-as.factor(dat$Turnover.Range...000.EURO.)
dat$Geographical.Area<-as.factor(dat$Geographical.Area)
dat$Gross_Margin <- dat$Turnover..EURO.- dat$Cost.of.Goods.Sold..EURO.
dat$Total_Overheads <- dat$Total.Cost.of.Distribution + dat$Total.Customer...Order.Management.Costs + dat$Customer.related.Issues.Costs + dat$Total.Operations.Costs
dat$Operational_Profit <- dat$Turnover..EURO. - dat$Cost.of.Goods.Sold..EURO. - dat$Total_Overheads
names(dat)<-c("Material_Code","Plant","Customer_Code","Quantity_units","Turnover_EURO","Cost_of_Goods_Sold_EURO","Total_Cost_of_Distribution","Sales_Transportation","Packing","Distribution_Activities","Trading_Transportation","Custom_Duties_Trading","Warehouse_Rent","Outbound_Logistics_Local_Branches","Total_Customer_Order_Management_Costs","Sales_Comissions","Sales_Development","Offer_Development","Order_Management","Customer_Service","Manage_Account_Receivables","Customer_Order_Management_Local_Branches","Customer_related_Issues_Costs","Rebate","Bad_Debt","Cost_of_Poor_Quality","Total_Operations_Costs","Manufacturing_Costs","Internal_Logistics_Costs","Supply_Chain_Management_Costs","Transportations","Manage_Orders_to_Suppliers","Inbound_Logistics","Inspect_goods","Manage_Foreign_Relationships","Product_Line","Product_Type","N_Parts","Assembly_Labour_Minutes","Machinery_Minutes","Number_of_Deliveries","Average_Delivery_Batch_Size_units","Customer_Class","Turnover_Range_EURO","Geographical_Area","Gross_Margin","Total_Overheads","Operational_Profit")
View(head(dat))
summary(dat)
dat$Assembly_Labour_Minutes<-as.numeric(dat$Assembly_Labour_Minutes)
dat$Machinery_Minutes<-as.numeric(dat$Machinery_Minutes)
dat[is.na(dat)] <- 0
summary(dat)
write.csv(dat,"FinalPMSData.csv")
dat$Turnover_EURO_Unit<-dat$Turnover_EURO/dat$Quantity_units
dat$Cost_of_Goods_Sold_EURO_Unit<-dat$Cost_of_Goods_Sold_EURO/dat$Quantity_units
dat$Total_Cost_of_Distribution_Unit<-dat$Total_Cost_of_Distribution/dat$Quantity_units
dat$Total_Customer_Order_Management_Costs_Unit<-dat$Total_Customer_Order_Management_Costs/dat$Quantity_units
dat$Customer_related_Issues_Costs_Unit<-dat$Customer_related_Issues_Costs/dat$Quantity_units
dat$Total_Operations_Costs_Unit<-dat$Total_Operations_Costs/dat$Quantity_units
dat$Gross_Margin_Unit<-dat$Gross_Margin/dat$Quantity_units
dat$Total_Overheads_Unit<-dat$Total_Overheads/dat$Quantity_units
dat$Operational_Profit_Unit<-dat$Operational_Profit/dat$Quantity_units
write.csv(dat,"FinalPMS_UnitINC_Data.csv")
View(head(dat))
NameList <- c("Material_Code","Plant","Customer_Code","Quantity_Units","Cost_of_Goods_Sold_EURO","
Product_Line","Product_Type","Customer_Class","Turnover_Range_EURO","Geographical_Area","
Turnover_EURO_Unit","Cost_of_Goods_Sold_EURO_Unit","Total_Cost_of_Distribution_Unit","
Total_Customer_Order_Management_Costs_Unit","Customer_related_Issues_Cost_Unit","
Total_Operations_Costs_Unit","Gross_Margin_Unit","Total_Overheads_Unit","Operational_Profit_Unit")
NewDF <- dat[,colnames(df) %in% NameList]
View(head(dat))
View(head(NewDF))
colnames(df) %in% NameList
colnames(df)
colnames(dat)
NewDF <- dat[,colnames(dat) %in% NameList]
View(head(NewDF))
write.csv(NewDF,"Only_UnitINC_Data.csv")
